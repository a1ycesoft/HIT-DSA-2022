Floyd-Warshall算法。计算任意两个顶点间的最短距离矩阵和最短路径矩阵，并输出任意两个顶点间的最短路径长度和最短路径
1->2最短路径长度为:12
1->2
1->3最短路径长度为:22
1->2->3
1->4最短路径长度为:22
1->6->5->4
1->5最短路径长度为:18
1->6->5
1->6最短路径长度为:16
1->6
1->7最短路径长度为:14
1->7
1->8最短路径长度为:15
1->7->8
1->9最短路径长度为:22
1->6->5->9
1->10最短路径长度为:23
1->2->3->10
2->1最短路径长度为:12
2->1
2->3最短路径长度为:10
2->3
2->4最短路径长度为:12
2->3->10->4
2->5最短路径长度为:9
2->6->5
2->6最短路径长度为:7
2->6
2->7最短路径长度为:13
2->6->5->8->7
2->8最短路径长度为:12
2->6->5->8
2->9最短路径长度为:13
2->6->5->9
2->10最短路径长度为:11
2->3->10
3->1最短路径长度为:22
3->2->1
3->2最短路径长度为:10
3->2
3->4最短路径长度为:2
3->10->4
3->5最短路径长度为:5
3->5
3->6最短路径长度为:6
3->6
3->7最短路径长度为:9
3->5->8->7
3->8最短路径长度为:8
3->5->8
3->9最短路径长度为:3
3->10->4->9
3->10最短路径长度为:1
3->10
4->1最短路径长度为:22
4->5->6->1
4->2最短路径长度为:12
4->10->3->2
4->3最短路径长度为:2
4->10->3
4->5最短路径长度为:4
4->5
4->6最短路径长度为:6
4->5->6
4->7最短路径长度为:8
4->5->8->7
4->8最短路径长度为:7
4->5->8
4->9最短路径长度为:1
4->9
4->10最短路径长度为:1
4->10
5->1最短路径长度为:18
5->6->1
5->2最短路径长度为:9
5->6->2
5->3最短路径长度为:5
5->3
5->4最短路径长度为:4
5->4
5->6最短路径长度为:2
5->6
5->7最短路径长度为:4
5->8->7
5->8最短路径长度为:3
5->8
5->9最短路径长度为:4
5->9
5->10最短路径长度为:5
5->4->10
6->1最短路径长度为:16
6->1
6->2最短路径长度为:7
6->2
6->3最短路径长度为:6
6->3
6->4最短路径长度为:6
6->5->4
6->5最短路径长度为:2
6->5
6->7最短路径长度为:6
6->5->8->7
6->8最短路径长度为:5
6->5->8
6->9最短路径长度为:6
6->5->9
6->10最短路径长度为:7
6->3->10
7->1最短路径长度为:14
7->1
7->2最短路径长度为:13
7->8->5->6->2
7->3最短路径长度为:9
7->8->5->3
7->4最短路径长度为:8
7->8->5->4
7->5最短路径长度为:4
7->8->5
7->6最短路径长度为:6
7->8->5->6
7->8最短路径长度为:1
7->8
7->9最短路径长度为:8
7->8->5->9
7->10最短路径长度为:9
7->8->5->4->10
8->1最短路径长度为:15
8->7->1
8->2最短路径长度为:12
8->5->6->2
8->3最短路径长度为:8
8->5->3
8->4最短路径长度为:7
8->5->4
8->5最短路径长度为:3
8->5
8->6最短路径长度为:5
8->5->6
8->7最短路径长度为:1
8->7
8->9最短路径长度为:7
8->5->9
8->10最短路径长度为:8
8->5->4->10
9->1最短路径长度为:22
9->5->6->1
9->2最短路径长度为:13
9->5->6->2
9->3最短路径长度为:3
9->4->10->3
9->4最短路径长度为:1
9->4
9->5最短路径长度为:4
9->5
9->6最短路径长度为:6
9->5->6
9->7最短路径长度为:8
9->5->8->7
9->8最短路径长度为:7
9->5->8
9->10最短路径长度为:2
9->4->10
10->1最短路径长度为:23
10->3->2->1
10->2最短路径长度为:11
10->3->2
10->3最短路径长度为:1
10->3
10->4最短路径长度为:1
10->4
10->5最短路径长度为:5
10->4->5
10->6最短路径长度为:7
10->3->6
10->7最短路径长度为:9
10->4->5->8->7
10->8最短路径长度为:8
10->4->5->8
10->9最短路径长度为:2
10->4->9
最短路径矩阵：
0 2 2 6 6 6 7 7 6 2
1 0 3 3 6 6 6 6 6 3
2 2 0 10 5 6 5 5 10 10
5 10 10 0 5 5 5 5 9 10
6 6 3 4 0 6 8 8 9 4
1 2 3 5 5 0 5 5 5 3
1 8 8 8 8 8 0 8 8 8
7 5 5 5 5 5 7 0 5 5
5 5 4 4 5 5 5 5 0 4
3 3 3 4 4 3 4 4 4 0
最短距离矩阵：
0 12 22 22 18 16 14 15 22 23
12 0 10 12 9 7 13 12 13 11
22 10 0 2 5 6 9 8 3 1
22 12 2 0 4 6 8 7 1 1
18 9 5 4 0 2 4 3 4 5
16 7 6 6 2 0 6 5 6 7
14 13 9 8 4 6 0 1 8 9
15 12 8 7 3 5 1 0 7 8
22 13 3 1 4 6 8 7 0 2
23 11 1 1 5 7 9 8 2 0
---------------------
Dijkstra 算法，输出源点及其到其他顶点的最短路径长度和最短路径
请输入源点：2
2->1距离为:12
路径：2->1
2->2距离为:0
路径：2
2->3距离为:10
路径：2->3
2->4距离为:12
路径：2->3->10->4
2->5距离为:9
路径：2->6->5
2->6距离为:7
路径：2->6
2->7距离为:13
路径：2->6->5->8->7
2->8距离为:12
路径：2->6->5->8
2->9距离为:13
路径：2->6->5->9
2->10距离为:11
路径：2->3->10
---------------------
Dijkstra 找出图中每个顶点 v 到某个指定顶点 c 最短路径
请输入目标点：7
1->7距离为:14
路径：1->7
2->7距离为:13
路径：2->6->5->8->7
3->7距离为:9
路径：3->5->8->7
4->7距离为:8
路径：4->5->8->7
5->7距离为:4
路径：5->8->7
6->7距离为:6
路径：6->5->8->7
7->7距离为:0
路径：7
8->7距离为:1
路径：8->7
9->7距离为:8
路径：9->5->8->7
10->7距离为:9
路径：10->4->5->8->7
---------------------
对于某对顶点 u 和 v，找出 u 到 v 的一条最短路径
请输入u、v：2 7
2->7距离为:13
路径：2->6->5->8->7